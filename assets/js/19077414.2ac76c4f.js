"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8030],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(r),d=a,u=p["".concat(c,".").concat(d)]||p[d]||f[d]||o;return r?n.createElement(u,i(i({ref:t},m),{},{components:r})):n.createElement(u,i({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2564:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={title:"Perform",id:"perform",description:"Perform Function of mathematical script in Fill My Cycle Website",sidebar_label:"Perform",keywords:["Perform","mathematical Perform","function"]},i=void 0,l={unversionedId:"projects/fmc-website/mathematical-logic/perform",id:"projects/fmc-website/mathematical-logic/perform",title:"Perform",description:"Perform Function of mathematical script in Fill My Cycle Website",source:"@site/docs/projects/fmc-website/mathematical-logic/perform.mdx",sourceDirName:"projects/fmc-website/mathematical-logic",slug:"/projects/fmc-website/mathematical-logic/perform",permalink:"/docs/projects/fmc-website/mathematical-logic/perform",draft:!1,editUrl:"https://github.com/tcet-opensource/documentation/edit/main/docs/projects/fmc-website/mathematical-logic/perform.mdx",tags:[],version:"current",lastUpdatedBy:"Himanshu Agarwal",lastUpdatedAt:1692713990,formattedLastUpdatedAt:"Aug 22, 2023",frontMatter:{title:"Perform",id:"perform",description:"Perform Function of mathematical script in Fill My Cycle Website",sidebar_label:"Perform",keywords:["Perform","mathematical Perform","function"]},sidebar:"docs",previous:{title:"Average",permalink:"/docs/projects/fmc-website/mathematical-logic/average"},next:{title:"Table Updater",permalink:"/docs/projects/fmc-website/mathematical-logic/table-updater"}},c={},s=[],m={toc:s},p="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"perform()"))," function helps us ",(0,a.kt)("em",{parentName:"p"},"find and work with specific tables, calculate the averages of the numbers in those tables"),', and then move on to perform additional actions using the "check()" function. It\'s like a script for a show, where we do things in a specific order to make everything work smoothly!'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="script.js"{2-6} showLineNumbers',title:'"script.js"{2-6}',showLineNumbers:!0},'function perform(){\n    var tbl01=document.getElementById("tbl01");\n    avg(tbl01);\n    var tbl02=document.getElementById("tbl02");\n    avg(tbl02);\n    check();\n}\n')),(0,a.kt)("p",null,"Let's go through each step of the code:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"First, we ",(0,a.kt)("strong",{parentName:"p"},"find a table")," called ",(0,a.kt)("inlineCode",{parentName:"p"},"tbl01"),". It's like a special chart with rows and columns. We use a special code called ",(0,a.kt)("inlineCode",{parentName:"p"},"document.getElementById()")," to find this table.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Then, we do something special with this table. We call another function called ",(0,a.kt)("inlineCode",{parentName:"p"},"avg(tbl01)"),". It's like telling someone to ",(0,a.kt)("em",{parentName:"p"},"find the average of the numbers in that table.")," So, we're asking for the average of all the numbers in the table ",(0,a.kt)("inlineCode",{parentName:"p"},"tbl01"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"We ",(0,a.kt)("strong",{parentName:"p"},"repeat the same process")," with another table called ",(0,a.kt)("inlineCode",{parentName:"p"},"tbl02"),". We find it using the same special code ",(0,a.kt)("inlineCode",{parentName:"p"},".getElementById()")," and then call the ",(0,a.kt)("inlineCode",{parentName:"p"},"avg(tbl02)")," function to find the average of the numbers in that table too.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"After finding the averages of both tables, we move on to the next task. We call another function called ",(0,a.kt)("inlineCode",{parentName:"p"},"check()"),". It's like asking someone to ",(0,a.kt)("em",{parentName:"p"},"perform a checklist or a set of instructions."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"check()")," function, there might be more instructions and actions happening, this function helps us find things on a web page, move around when we type, do some calculations, and maybe show us some results later. "))),(0,a.kt)("br",null),(0,a.kt)("p",null," ",(0,a.kt)("em",{parentName:"p"},"We have successfully understood the ",(0,a.kt)("a",{parentName:"em",href:"perform"},(0,a.kt)("strong",{parentName:"a"},"Perform"))," function! Let's move on and understand the ",(0,a.kt)("a",{parentName:"em",href:"table-updater"},(0,a.kt)("strong",{parentName:"a"},"Table Updater"))," function of the ",(0,a.kt)("strong",{parentName:"em"},(0,a.kt)("a",{parentName:"strong",href:"https://fillmycycle.tcetmumbai.in/"},"Fill My Cycle")),".")))}f.isMDXComponent=!0}}]);